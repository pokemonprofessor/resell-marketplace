{"ast":null,"code":"var _jsxFileName = \"/Users/pulkit/Desktop/resell-marketplace-main/src/components/wrapper/snack.tsx\",\n  _s = $RefreshSig$();\n// @ts-nocheck\nimport { useSnackbar } from \"notistack\";\nimport React from \"react\";\nimport { IconButton } from '@material-ui/core';\nimport { Close as IconClose } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let VariantType = /*#__PURE__*/function (VariantType) {\n  VariantType[\"default\"] = \"default\";\n  VariantType[\"error\"] = \"error\";\n  VariantType[\"success\"] = \"success\";\n  VariantType[\"warning\"] = \"warning\";\n  VariantType[\"info\"] = \"info\";\n  return VariantType;\n}({});\nconst InnerSnackbarUtilsConfigurator = props => {\n  _s();\n  props.setUseSnackbarRef(useSnackbar());\n  return null;\n};\n_s(InnerSnackbarUtilsConfigurator, \"ldqFBWWP2VlqKgxPLVEsSp9nslQ=\", false, function () {\n  return [useSnackbar];\n});\n_c = InnerSnackbarUtilsConfigurator;\nlet useSnackbarRef;\nconst setUseSnackbarRef = useSnackbarRefProp => {\n  useSnackbarRef = useSnackbarRefProp;\n};\nexport const SnackbarUtilsConfigurator = props => {\n  return /*#__PURE__*/_jsxDEV(InnerSnackbarUtilsConfigurator, {\n    setUseSnackbarRef: setUseSnackbarRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n//sets a default length for all Snack messages\n_c2 = SnackbarUtilsConfigurator;\nconst defaultSnackMessageLength = 1000;\nconst trimMessage = function (msg) {\n  let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultSnackMessageLength;\n  return msg.substring(0, length);\n};\nconst defaultOptions = {\n  anchorOrigin: {\n    vertical: \"top\",\n    horizontal: \"right\"\n  },\n  autoHideDuration: 3000,\n  action: key => /*#__PURE__*/_jsxDEV(SnackbarCloseButton, {}, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 34\n  }, this)\n};\nfunction SnackbarCloseButton(props) {\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: () => useSnackbarRef.closeSnackbar(props.key),\n    color: \"inherit\",\n    children: /*#__PURE__*/_jsxDEV(IconClose, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\n_c3 = SnackbarCloseButton;\nexport default {\n  success(msg) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.toast(trimMessage(msg), {\n      ...options,\n      variant: VariantType.success,\n      ...defaultOptions\n    });\n  },\n  warning(msg) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.toast(trimMessage(msg), {\n      ...options,\n      variant: VariantType.warning,\n      ...defaultOptions\n    });\n  },\n  info(msg) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.toast(trimMessage(msg), {\n      ...options,\n      variant: VariantType.info,\n      ...defaultOptions\n    });\n  },\n  error(msg) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.toast(trimMessage(msg), {\n      ...options,\n      variant: VariantType.error,\n      ...defaultOptions\n    });\n  },\n  toast(msg) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    useSnackbarRef.enqueueSnackbar(msg, options);\n  }\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InnerSnackbarUtilsConfigurator\");\n$RefreshReg$(_c2, \"SnackbarUtilsConfigurator\");\n$RefreshReg$(_c3, \"SnackbarCloseButton\");","map":{"version":3,"names":["useSnackbar","React","IconButton","Close","IconClose","jsxDEV","_jsxDEV","VariantType","InnerSnackbarUtilsConfigurator","props","_s","setUseSnackbarRef","_c","useSnackbarRef","useSnackbarRefProp","SnackbarUtilsConfigurator","fileName","_jsxFileName","lineNumber","columnNumber","_c2","defaultSnackMessageLength","trimMessage","msg","length","arguments","undefined","substring","defaultOptions","anchorOrigin","vertical","horizontal","autoHideDuration","action","key","SnackbarCloseButton","onClick","closeSnackbar","color","children","_c3","success","options","toast","variant","warning","info","error","enqueueSnackbar","$RefreshReg$"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/components/wrapper/snack.tsx"],"sourcesContent":["// @ts-nocheck\nimport { useSnackbar, OptionsObject, WithSnackbarProps, SnackbarKey } from \"notistack\";\nimport React from \"react\";\nimport { IconButton } from '@material-ui/core';\nimport { Close as IconClose } from '@material-ui/icons';\n\nexport enum VariantType {\n  default = \"default\",\n  error = \"error\",\n  success = \"success\",\n  warning = \"warning\",\n  info = \"info\",\n}\n\ninterface SnackProps {\n  setUseSnackbarRef: (showSnackbar: WithSnackbarProps) => void;\n}\n\nconst InnerSnackbarUtilsConfigurator: React.FC<SnackProps> = (props) => {\n  props.setUseSnackbarRef(useSnackbar());\n  return null;\n};\n\nlet useSnackbarRef: WithSnackbarProps;\nconst setUseSnackbarRef = (useSnackbarRefProp: WithSnackbarProps) => {\n  useSnackbarRef = useSnackbarRefProp;\n};\n\nexport const SnackbarUtilsConfigurator = (props: {\n  children?: React.ReactNode;\n}) => {\n  return (\n    <InnerSnackbarUtilsConfigurator setUseSnackbarRef={setUseSnackbarRef}/>\n  );\n};\n\n//sets a default length for all Snack messages\nconst defaultSnackMessageLength = 1000;\n\nconst trimMessage = (\n  msg: string,\n  length: number = defaultSnackMessageLength\n) => {\n  return msg.substring(0, length);\n};\n\nconst defaultOptions : OptionsObject = {\n  anchorOrigin: {\n    vertical: \"top\",\n    horizontal: \"right\",\n  },\n  autoHideDuration: 3000,\n  action: (key?: SnackbarKey) => <SnackbarCloseButton key={key} />\n};\n\nfunction SnackbarCloseButton(props : { key?: SnackbarKey }) {\n  return (\n    <IconButton onClick={() => useSnackbarRef.closeSnackbar(props.key)} color=\"inherit\">\n      <IconClose />\n    </IconButton>\n  );\n}\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  success(msg: string, options: OptionsObject = {}) {\n    this.toast(trimMessage(msg), { ...options, variant: VariantType.success , ...defaultOptions});\n  },\n  warning(msg: string, options: OptionsObject = {}) {\n    this.toast(trimMessage(msg), { ...options, variant: VariantType.warning, ...defaultOptions });\n  },\n  info(msg: string, options: OptionsObject = {}) {\n    this.toast(trimMessage(msg), { ...options, variant: VariantType.info, ...defaultOptions });\n  },\n  error(msg: string, options: OptionsObject = {}) {\n    this.toast(trimMessage(msg), { ...options, variant: VariantType.error, ...defaultOptions });\n  },\n  toast(msg: string, options: OptionsObject = {}) {\n    useSnackbarRef.enqueueSnackbar(msg, options);\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}