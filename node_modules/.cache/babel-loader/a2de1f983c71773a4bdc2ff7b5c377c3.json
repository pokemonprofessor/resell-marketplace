{"ast":null,"code":"import axios from \"api/axiosController\";\nimport { axiosInstanceAdmin } from \"api/axiosController\";\nexport const onBoardSeller = async data => {\n  let uri = `/signup`;\n  try {\n    const res = await axios.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nexport const signinSeller = async data => {\n  let uri = `/signin`;\n  try {\n    const res = await axios.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nexport const setSellerPassword = async data => {\n  let uri = `/create-password`;\n  try {\n    const res = await axios.put(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nexport const resendSetPasswordEmail = async data => {\n  let uri = `/admin/seller-resend-email`;\n  try {\n    const res = await axiosInstanceAdmin.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nexport const uploadDocs = async data => {\n  let uri = `/upload`;\n  const formData = new FormData();\n  for (const key of Object.keys(data.documents)) {\n    formData.append('files', data.documents[key]);\n  }\n  formData.append('email', data.email);\n  formData.append('firstName', data.firstName);\n  formData.append('lastName', data.lastName);\n  try {\n    const res = await axios.post(uri, formData, {\n      headers: {\n        \"Content-type\": \"multipart/form-data\"\n      }\n    });\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nexport const getSellers = async () => {\n  let uri = `/admin/get-sellers`;\n  try {\n    const res = await axiosInstanceAdmin.get(uri);\n    console.log('resss', res);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};","map":{"version":3,"names":["axios","axiosInstanceAdmin","onBoardSeller","data","uri","res","post","e","signinSeller","setSellerPassword","put","resendSetPasswordEmail","uploadDocs","formData","FormData","key","Object","keys","documents","append","email","firstName","lastName","headers","getSellers","get","console","log"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/services/seller.tsx"],"sourcesContent":["import axios from \"api/axiosController\";\nimport { axiosInstanceAdmin } from \"api/axiosController\";\nimport { getAccessToken } from \"utils/auth\";\n\nexport const onBoardSeller = async (data: any) => {\n  let uri = `/signup`;\n\n  try {\n    const res = await axios.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const signinSeller = async (data: any) => {\n  let uri = `/signin`;\n\n  try {\n    const res = await axios.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const setSellerPassword = async (data: any) => {\n  let uri = `/create-password`;\n\n  try {\n    const res = await axios.put(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const resendSetPasswordEmail = async (data: any) => {\n  let uri = `/admin/seller-resend-email`;\n\n  try {\n    const res = await axiosInstanceAdmin.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const uploadDocs = async (data: any) => {\n  let uri = `/upload`;\n  const formData = new FormData();\n  for (const key of Object.keys(data.documents)) {\n      formData.append('files', data.documents[key])\n  }\n\n  formData.append('email', data.email);\n  formData.append('firstName', data.firstName);\n  formData.append('lastName', data.lastName);\n\n  try {\n    const res = await axios.post(uri, formData, { headers: { \"Content-type\": \"multipart/form-data\" } });\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getSellers = async () => {\n  let uri = `/admin/get-sellers`;\n  try {\n    const res = await axiosInstanceAdmin.get(uri);\n    console.log('resss',res)\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}