{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLoading: false,\n  error: false,\n  bulkUploadResponse: {}\n};\nexport const bulkUploadSlice = createSlice({\n  name: 'bulkUpload',\n  initialState,\n  reducers: {\n    bulkUploadStart: (state, action) => ({\n      ...initialState,\n      isLoading: true\n    }),\n    startLoading: state => ({\n      ...initialState,\n      isLoading: true\n    }),\n    bulkUploadSuccess: (state, action) => ({\n      ...state,\n      isLoading: false,\n      bulkUploadResponse: action.payload.bulkUploadResponse\n    }),\n    bulkUploadFailure: state => ({\n      ...state,\n      error: true,\n      isLoading: false\n    })\n  }\n});\nexport const {\n  bulkUploadFailure,\n  bulkUploadStart,\n  startLoading,\n  bulkUploadSuccess\n} = bulkUploadSlice.actions;\nexport default bulkUploadSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isLoading","error","bulkUploadResponse","bulkUploadSlice","name","reducers","bulkUploadStart","state","action","startLoading","bulkUploadSuccess","payload","bulkUploadFailure","actions","reducer"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/reducers/bulkUpload.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\ninterface State {\n  isLoading: boolean;\n  error: boolean;\n  bulkUploadResponse: any;\n}\n\nconst initialState: State = {\n  isLoading: false,\n  error: false,\n  bulkUploadResponse: {}\n};\n\nexport const bulkUploadSlice = createSlice({\n  name: 'bulkUpload',\n  initialState,\n  reducers: {\n    bulkUploadStart: (state: State, action) => ({\n      ...initialState,\n      isLoading: true\n    }),\n    startLoading: (state: State) => ({\n      ...initialState,\n      isLoading: true\n    }),\n    bulkUploadSuccess: (state: State, action) => ({\n      ...state,\n      isLoading: false,\n      bulkUploadResponse: action.payload.bulkUploadResponse\n    }),\n    bulkUploadFailure: (state: State) => ({\n      ...state,\n      error: true,\n      isLoading: false,\n    }),\n  }\n});\n\nexport const {\n    bulkUploadFailure,\n    bulkUploadStart,\n    startLoading,\n    bulkUploadSuccess\n} = bulkUploadSlice.actions;\nexport default bulkUploadSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAQ9C,MAAMC,YAAmB,GAAG;EAC1BC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,KAAK;EACZC,kBAAkB,EAAE,CAAC;AACvB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGL,WAAW,CAAC;EACzCM,IAAI,EAAE,YAAY;EAClBL,YAAY;EACZM,QAAQ,EAAE;IACRC,eAAe,EAAEA,CAACC,KAAY,EAAEC,MAAM,MAAM;MAC1C,GAAGT,YAAY;MACfC,SAAS,EAAE;IACb,CAAC,CAAC;IACFS,YAAY,EAAGF,KAAY,KAAM;MAC/B,GAAGR,YAAY;MACfC,SAAS,EAAE;IACb,CAAC,CAAC;IACFU,iBAAiB,EAAEA,CAACH,KAAY,EAAEC,MAAM,MAAM;MAC5C,GAAGD,KAAK;MACRP,SAAS,EAAE,KAAK;MAChBE,kBAAkB,EAAEM,MAAM,CAACG,OAAO,CAACT;IACrC,CAAC,CAAC;IACFU,iBAAiB,EAAGL,KAAY,KAAM;MACpC,GAAGA,KAAK;MACRN,KAAK,EAAE,IAAI;MACXD,SAAS,EAAE;IACb,CAAC;EACH;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACTY,iBAAiB;EACjBN,eAAe;EACfG,YAAY;EACZC;AACJ,CAAC,GAAGP,eAAe,CAACU,OAAO;AAC3B,eAAeV,eAAe,CAACW,OAAO"},"metadata":{},"sourceType":"module"}