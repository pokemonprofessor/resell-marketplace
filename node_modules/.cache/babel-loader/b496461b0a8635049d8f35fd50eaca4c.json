{"ast":null,"code":"import { axiosInstanceMain } from \"api/axiosController\";\nconst signUpBuyer = async signupData => {\n  let uri = \"user/signup\";\n  try {\n    const res = await axiosInstanceMain.post(uri, signupData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst registerAffiliate = async signupData => {\n  let uri = \"user/affiliate/register\";\n  try {\n    const res = await axiosInstanceMain.post(uri, signupData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst signUpSeller = async signupData => {\n  let uri = \"user/seller/signup\";\n  try {\n    const res = await axiosInstanceMain.post(uri, signupData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nexport const signIn = async signinData => {\n  let uri = \"user/signin\";\n  console.log('uri', uri, signinData);\n  try {\n    const res = await axiosInstanceMain.post(uri, signinData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst affiliateLogin = async signinData => {\n  let uri = \"user/affiliate/login\";\n  try {\n    const res = await axiosInstanceMain.post(uri, signinData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst checkEmail = async data => {\n  let uri = \"user/check-email\";\n  try {\n    const res = await axiosInstanceMain.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst tokenVerification = async token => {\n  let uri = \"user/verify-token\";\n  try {\n    const res = await axiosInstanceMain.post(uri, token);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst resendEmailVerificationLink = async email => {\n  let uri = \"user/resend-email\";\n  try {\n    const res = await axiosInstanceMain.post(uri, email);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst sendResetPasswordLink = async data => {\n  let uri = \"user/send-reset-password-link\";\n  try {\n    const res = await axiosInstanceMain.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst getCountryCode = async data => {\n  let uri = \"user/get-country-code\";\n  try {\n    const res = await axiosInstanceMain.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst passwordUpdate = async data => {\n  let uri = \"user/update-password\";\n  try {\n    const res = await axiosInstanceMain.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst subscribeNewLetter = async data => {\n  let uri = \"user/subscribe\";\n  try {\n    const res = await axiosInstanceMain.post(uri, {\n      email: data.email\n    });\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nconst verifyEmailOTP = async data => {\n  let uri = \"user/email-verification\";\n  try {\n    const res = await axiosInstanceMain.post(uri, {\n      otp: data.otp,\n      email: data.email\n    });\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\nexport { signUpBuyer, signUpSeller, checkEmail, tokenVerification, resendEmailVerificationLink, sendResetPasswordLink, getCountryCode, passwordUpdate, registerAffiliate, affiliateLogin, subscribeNewLetter, verifyEmailOTP };","map":{"version":3,"names":["axiosInstanceMain","signUpBuyer","signupData","uri","res","post","data","e","registerAffiliate","signUpSeller","signIn","signinData","console","log","affiliateLogin","checkEmail","tokenVerification","token","resendEmailVerificationLink","email","sendResetPasswordLink","getCountryCode","passwordUpdate","subscribeNewLetter","verifyEmailOTP","otp"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/services/user.tsx"],"sourcesContent":["import { axiosInstanceMain } from \"api/axiosController\";\n\nconst signUpBuyer = async (signupData: any) => {\n  let uri = \"user/signup\";\n  try {\n    const res = await axiosInstanceMain.post(uri, signupData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst registerAffiliate = async (signupData: any) => {\n  let uri = \"user/affiliate/register\";\n\n  try {\n    const res = await axiosInstanceMain.post(uri, signupData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst signUpSeller = async (signupData: any) => {\n  let uri = \"user/seller/signup\";\n  try {\n    const res = await axiosInstanceMain.post(uri, signupData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const signIn = async (signinData: any) => {\n  let uri = \"user/signin\";\n  console.log('uri',uri,signinData)\n  try {\n    const res = await axiosInstanceMain.post(uri, signinData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst affiliateLogin = async (signinData: any) => {\n  let uri = \"user/affiliate/login\";\n  try {\n    const res = await axiosInstanceMain.post(uri, signinData);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst checkEmail = async (data: object) => {\n  let uri = \"user/check-email\";\n  try {\n    const res = await axiosInstanceMain.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst tokenVerification = async (token: object) => {\n  let uri = \"user/verify-token\";\n  try {\n    const res = await axiosInstanceMain.post(uri, token);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst resendEmailVerificationLink = async (email: object) => {\n  let uri = \"user/resend-email\";\n  try {\n    const res = await axiosInstanceMain.post(uri, email);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst sendResetPasswordLink = async (data: object) => {\n  let uri = \"user/send-reset-password-link\";\n  try {\n    const res = await axiosInstanceMain.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst getCountryCode = async (data: object) => {\n  let uri = \"user/get-country-code\";\n  try {\n    const res = await axiosInstanceMain.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst passwordUpdate = async (data: object) => {\n  let uri = \"user/update-password\";\n  try {\n    const res = await axiosInstanceMain.post(uri, data);\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst subscribeNewLetter = async (data: any) => {\n  let uri = \"user/subscribe\";\n  try {\n    const res = await axiosInstanceMain.post(uri, { email: data.email });\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst verifyEmailOTP = async (data: any) => {\n  let uri = \"user/email-verification\";\n  try {\n    const res = await axiosInstanceMain.post(uri, { otp: data.otp, email: data.email });\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport {\n  signUpBuyer,\n  signUpSeller,\n  checkEmail,\n  tokenVerification,\n  resendEmailVerificationLink,\n  sendResetPasswordLink,\n  getCountryCode,\n  passwordUpdate,\n  registerAffiliate,\n  affiliateLogin,\n  subscribeNewLetter,\n  verifyEmailOTP,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}