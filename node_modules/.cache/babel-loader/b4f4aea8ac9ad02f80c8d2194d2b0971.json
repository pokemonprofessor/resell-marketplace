{"ast":null,"code":"import FirebaseTypes from \"firebase\";\nimport firebase from \"config/firebase\";\nexport { FirebaseTypes };\nexport const sendOTPWithFb = async data => {\n  const {\n    phoneNumber,\n    containerName,\n    appVerifier\n  } = data;\n  try {\n    if (!appVerifier) {\n      const appVerifier = new FirebaseTypes.auth.RecaptchaVerifier(containerName, {\n        size: \"invisible\"\n      });\n      const confirmationResult = await firebase.auth().signInWithPhoneNumber(`${phoneNumber}`, appVerifier);\n      window.confirmationResult = confirmationResult;\n      return {\n        captchaBoolean: true,\n        appVerifier\n      };\n    }\n    const confirmationResult = await firebase.auth().signInWithPhoneNumber(`${phoneNumber}`, appVerifier);\n    window.confirmationResult = confirmationResult;\n    return {\n      captchaBoolean: true,\n      appVerifier\n    };\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\nexport const sendEmailWithFb = async (email, url) => {\n  try {\n    const actionCodeSettings = {\n      url,\n      handleCodeInApp: true\n    };\n    await firebase.auth().sendSignInLinkToEmail(email, actionCodeSettings);\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};","map":{"version":3,"names":["FirebaseTypes","firebase","sendOTPWithFb","data","phoneNumber","containerName","appVerifier","auth","RecaptchaVerifier","size","confirmationResult","signInWithPhoneNumber","window","captchaBoolean","error","console","sendEmailWithFb","email","url","actionCodeSettings","handleCodeInApp","sendSignInLinkToEmail"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/services/fbApi.ts"],"sourcesContent":["import FirebaseTypes from \"firebase\";\nimport firebase from \"config/firebase\";\nexport { FirebaseTypes };\n\ndeclare global {\n  interface Window {\n    confirmationResult?: FirebaseTypes.auth.ConfirmationResult;\n  }\n}\n\nexport const sendOTPWithFb = async (data: any): Promise<any> => {\n  const { phoneNumber, containerName, appVerifier } = data\n\n  try {\n    if (!appVerifier) {\n      const appVerifier: any = new FirebaseTypes.auth.RecaptchaVerifier(\n        containerName,\n        {\n          size: \"invisible\",\n        }\n      );\n\n      const confirmationResult = await firebase\n        .auth()\n        .signInWithPhoneNumber(`${phoneNumber}`, appVerifier);\n      window.confirmationResult = confirmationResult;\n      return { captchaBoolean: true, appVerifier };\n    }\n\n    const confirmationResult = await firebase\n      .auth()\n      .signInWithPhoneNumber(`${phoneNumber}`, appVerifier);\n    window.confirmationResult = confirmationResult;\n    return { captchaBoolean: true, appVerifier };\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\nexport const sendEmailWithFb = async (\n  email: string,\n  url: string\n): Promise<boolean> => {\n  try {\n    const actionCodeSettings = {\n      url,\n      handleCodeInApp: true,\n    };\n    await firebase.auth().sendSignInLinkToEmail(email, actionCodeSettings);\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,UAAU;AACpC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASD,aAAa;AAQtB,OAAO,MAAME,aAAa,GAAG,MAAOC,IAAS,IAAmB;EAC9D,MAAM;IAAEC,WAAW;IAAEC,aAAa;IAAEC;EAAY,CAAC,GAAGH,IAAI;EAExD,IAAI;IACF,IAAI,CAACG,WAAW,EAAE;MAChB,MAAMA,WAAgB,GAAG,IAAIN,aAAa,CAACO,IAAI,CAACC,iBAAiB,CAC/DH,aAAa,EACb;QACEI,IAAI,EAAE;MACR,CACF,CAAC;MAED,MAAMC,kBAAkB,GAAG,MAAMT,QAAQ,CACtCM,IAAI,CAAC,CAAC,CACNI,qBAAqB,CAAE,GAAEP,WAAY,EAAC,EAAEE,WAAW,CAAC;MACvDM,MAAM,CAACF,kBAAkB,GAAGA,kBAAkB;MAC9C,OAAO;QAAEG,cAAc,EAAE,IAAI;QAAEP;MAAY,CAAC;IAC9C;IAEA,MAAMI,kBAAkB,GAAG,MAAMT,QAAQ,CACtCM,IAAI,CAAC,CAAC,CACNI,qBAAqB,CAAE,GAAEP,WAAY,EAAC,EAAEE,WAAW,CAAC;IACvDM,MAAM,CAACF,kBAAkB,GAAGA,kBAAkB;IAC9C,OAAO;MAAEG,cAAc,EAAE,IAAI;MAAEP;IAAY,CAAC;EAC9C,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAAA,CAC7BC,KAAa,EACbC,GAAW,KACU;EACrB,IAAI;IACF,MAAMC,kBAAkB,GAAG;MACzBD,GAAG;MACHE,eAAe,EAAE;IACnB,CAAC;IACD,MAAMnB,QAAQ,CAACM,IAAI,CAAC,CAAC,CAACc,qBAAqB,CAACJ,KAAK,EAAEE,kBAAkB,CAAC;IACtE,OAAO,IAAI;EACb,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module"}