{"ast":null,"code":"import axios from \"api/axiosController\";\nimport { getAccessToken } from \"utils/auth\";\nexport const make_api_call = async data => {\n  let uri = `/bulk-upload`;\n  try {\n    const res = await axios.post(uri, {\n      data: data\n    }, {\n      headers: {\n        Authorization: `Bearer ${getAccessToken()}`\n      }\n    });\n    return res.data;\n  } catch (e) {\n    // throw e;\n    return e;\n  }\n};\nasync function sliceIntoChunks(arr, chunkSize) {\n  const res = [];\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    const chunk = arr.slice(i, i + chunkSize);\n    res.push(chunk);\n  }\n  return res;\n}\nasync function processProducts(data) {\n  let formatedData = await sliceIntoChunks(data, 5000);\n  let result;\n  setTimeout(async () => {\n    for (let i = 0; i < formatedData.length; i++) {\n      result = await make_api_call(formatedData[i]);\n      formatedData[i][\"result\"] = result;\n    }\n  }, 10000);\n  return data;\n}\n\n// export const bulkUploadProuducts = async (data: any) => {\n//   let result = await processProducts(data.data);\n//   return result;\n// };\n\nexport const bulkUploadProuducts = async data => {\n  console.log('satatatta', data);\n  let uri = `/bulk-upload`;\n  console.log('dataatatatat', data.documents);\n  const formData = new FormData();\n  for (const key of Object.keys(data.documents)) {\n    formData.append('files', data.documents[key]);\n  }\n  formData.append('email', data.email);\n  formData.append('firstName', data.firstName);\n  formData.append('lastName', data.lastName);\n  formData.append('userId', data.userId);\n  formData.append('username', data.username);\n  try {\n    const res = await axios.post(uri, formData, {\n      headers: {\n        \"Content-type\": \"multipart/form-data\",\n        Authorization: `Bearer ${getAccessToken()}`\n      }\n    });\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};","map":{"version":3,"names":["axios","getAccessToken","make_api_call","data","uri","res","post","headers","Authorization","e","sliceIntoChunks","arr","chunkSize","i","length","chunk","slice","push","processProducts","formatedData","result","setTimeout","bulkUploadProuducts","console","log","documents","formData","FormData","key","Object","keys","append","email","firstName","lastName","userId","username"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/services/bulkUpload.tsx"],"sourcesContent":["import axios from \"api/axiosController\";\nimport { getAccessToken } from \"utils/auth\";\n\nexport const make_api_call = async (data: any) => {\n  let uri = `/bulk-upload`;\n\n  try {\n    const res = await axios.post(\n      uri,\n      { data: data },\n      { headers: { Authorization: `Bearer ${getAccessToken()}` } }\n    );\n    return res.data;\n  } catch (e) {\n    // throw e;\n    return e;\n  }\n};\n\nasync function sliceIntoChunks(arr: any[], chunkSize: number) {\n  const res = [];\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    const chunk = arr.slice(i, i + chunkSize);\n    res.push(chunk);\n  }\n  return res;\n}\n\nasync function processProducts(data: any) {\n  let formatedData: any = await sliceIntoChunks(data, 5000);\n  let result;\n  setTimeout(async () => {\n    for (let i = 0; i < formatedData.length; i++) {\n      result = await make_api_call(formatedData[i]);\n      formatedData[i][\"result\"] = result;\n    }\n  }, 10000);\n  return data;\n}\n\n// export const bulkUploadProuducts = async (data: any) => {\n//   let result = await processProducts(data.data);\n//   return result;\n// };\n\n\nexport const bulkUploadProuducts = async (data: any) => {\n  console.log('satatatta',data)\n  let uri = `/bulk-upload`;\n  console.log('dataatatatat',data.documents)\n  const formData = new FormData();\n  for (const key of Object.keys(data.documents)) {\n      formData.append('files', data.documents[key]) \n  }\n\n  formData.append('email', data.email);\n  formData.append('firstName', data.firstName);\n  formData.append('lastName', data.lastName);\n  formData.append('userId', data.userId);\n  formData.append('username', data.username);\n\n  try {\n    const res = await axios.post(uri, formData, { headers: { \"Content-type\": \"multipart/form-data\", Authorization: `Bearer ${getAccessToken()}` } });\n    return res.data;\n  } catch (e) {\n    throw e;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}