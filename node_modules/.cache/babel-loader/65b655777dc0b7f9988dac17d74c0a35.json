{"ast":null,"code":"var _jsxFileName = \"/Users/pulkit/Desktop/resell-marketplace-main/src/components/Content/productUpdate/index.tsx\",\n  _s = $RefreshSig$();\nimport { Grid, List, ListItem, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { categoriesStart } from \"redux/reducers/categories\";\nimport { ExcelDownloaderTemplate } from \"./excelDownloaderTemplate\";\nimport ExcelToJson from \"./uploadExcel\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport { taxCodesStart } from \"redux/reducers/taxCodes\";\nimport \"../../../styles/common.css\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProductQtyPriceUpdate = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [categoryList, setCategoryList] = useState([]);\n  const [taxCodesList, setTaxCodes] = useState([]);\n  const [categoryValue, setCategoryValue] = useState();\n  const [taxCodeValue, setTaxCodeValue] = useState();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    dispatch(categoriesStart());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(taxCodesStart());\n  }, [dispatch]);\n  const categories = useSelector(state => state.categories.categories);\n  const taxCodes = useSelector(state => state.taxCodes.taxCodes);\n  useEffect(() => {\n    let _categorylist = [];\n    for (let i = 0; i < categories.length; i++) {\n      _categorylist.push(categories[i].categoryName);\n    }\n    setCategoryList(_categorylist);\n  }, [categories]);\n  useEffect(() => {\n    let _taxCodelist = [];\n    for (let i = 0; i < taxCodes.length; i++) {\n      _taxCodelist.push(`${taxCodes[i].name} || ${taxCodes[i].id}`);\n    }\n    setTaxCodes(_taxCodelist);\n  }, [taxCodes]);\n  const onBeforeDownload = () => {\n    let _data = [];\n    for (let i = 0; i < 1000; i++) {\n      _data.push({\n        \"Product Id\": \"\",\n        \"Sale Price\": \"\",\n        Price: \"\",\n        Quantity: \"\",\n        \"Listing Status\": \"\"\n      });\n    }\n    return _data;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"request-to-sell-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"request-form-section non-active\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"request-form-card\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  direction: \"column\",\n                  container: true,\n                  alignItems: \"center\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"h6\",\n                      variant: \"h6\",\n                      children: \"DOWNLOAD TEMPLATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      direction: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      spacing: 2,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(ExcelDownloaderTemplate, {\n                          btnName: \"Download Template\",\n                          fileName: \"QtyPriceTemplate\",\n                          onBeforeDownload: onBeforeDownload\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 103,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 102,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"request-to-sell-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"request-form-section non-active\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"request-form-card\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  direction: \"column\",\n                  container: true,\n                  alignItems: \"center\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"h6\",\n                      variant: \"h6\",\n                      children: \"UPLOAD PRODUCTS EXCEL FILE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      direction: \"column\",\n                      alignItems: \"center\",\n                      spacing: 8,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(ExcelToJson, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      direction: \"column\",\n      container: true,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            borderRadius: 13,\n            mx: \"2px\",\n            border: `3px solid #0068ff`\n          },\n          elevation: 24,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 1000\n            },\n            p: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"inline-flex\",\n                  alignItems: \"center\",\n                  flexWrap: \"wrap\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(InfoIcon, {\n                  sx: {\n                    color: \"red\",\n                    marginRight: \"10px\",\n                    fontSize: \"40px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"table-heading\",\n                  children: \"Instructions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container container-margin\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-form-wrap-home\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  sx: {\n                    minWidth: 1000\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: 30\n                      },\n                      color: \"#0f5b9e\",\n                      children: \"Follow the below steps to upload your products in our product's database.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: 20\n                      },\n                      color: \"InfoText\",\n                      children: \"1. Under 'DOWNLOAD PRODUCT TEMPLATE' section, Select a category from the category dropdown and click on 'DOWNLOAD EXCEL SHEET' button. An excel sheet will get downloaded on your system named 'ProductTemplate.xlsx'\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: 17\n                      },\n                      color: \"InfoText\",\n                      children: [\"2. In the downloaded excel file, you will find three sheets\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(List, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                          children: [/*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 209,\n                            columnNumber: 29\n                          }, this), \"data - Template file that contains all the columns you need to fill. Each column represents a property of the product. Eg - title, description, price, quantity etc.\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                          children: [/*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 216,\n                            columnNumber: 29\n                          }, this), \"Instructions - You can refer to this sheet in order to understand the meaning of each column that needs to filled.\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 215,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                          children: [/*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 222,\n                            columnNumber: 29\n                          }, this), \"Example - You can refer to this sheet in order to get an idea how to fill the sheet 'data'.\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 221,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: 20\n                      },\n                      color: \"InfoText\",\n                      children: \"3. Fom section 'UPLOAD PRODUCTS EXCEL FILE' click on 'ADD ATTACHEMENTS' and select the updated excel file.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: 20\n                      },\n                      color: \"InfoText\",\n                      children: \"4. Finally your products will be updated in our system.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ProductQtyPriceUpdate, \"hGynqJ5OlbRuXYATVSdMEsqsYPY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ProductQtyPriceUpdate;\nvar _c;\n$RefreshReg$(_c, \"ProductQtyPriceUpdate\");","map":{"version":3,"names":["Grid","List","ListItem","Typography","useEffect","useState","useDispatch","useSelector","categoriesStart","ExcelDownloaderTemplate","ExcelToJson","Paper","Box","InfoIcon","ChevronRightIcon","CardContent","Card","taxCodesStart","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductQtyPriceUpdate","_s","dispatch","categoryList","setCategoryList","taxCodesList","setTaxCodes","categoryValue","setCategoryValue","taxCodeValue","setTaxCodeValue","data","setData","categories","state","taxCodes","_categorylist","i","length","push","categoryName","_taxCodelist","name","id","onBeforeDownload","_data","Price","Quantity","children","container","spacing","direction","item","lg","className","alignItems","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","btnName","sx","borderRadius","mx","border","elevation","minWidth","p","style","textAlign","display","flexWrap","color","marginRight","fontSize","_c","$RefreshReg$"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/components/Content/productUpdate/index.tsx"],"sourcesContent":["import { Autocomplete, Grid, List, ListItem, Typography } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { categoriesStart } from \"redux/reducers/categories\";\nimport { RootState } from \"redux/store\";\nimport { ExcelDownloaderTemplate } from \"./excelDownloaderTemplate\";\nimport ExcelToJson from \"./uploadExcel\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport { taxCodesStart } from \"redux/reducers/taxCodes\";\n\nimport \"../../../styles/common.css\";\nimport \"./style.css\";\n\nexport const ProductQtyPriceUpdate = () => {\n  const dispatch = useDispatch();\n  const [categoryList, setCategoryList] = useState([]);\n  const [taxCodesList, setTaxCodes] = useState([]);\n  const [categoryValue, setCategoryValue] = useState<string | null>();\n  const [taxCodeValue, setTaxCodeValue] = useState<string | null>();\n  const [data, setData] = useState<any>([]);\n  useEffect(() => {\n    dispatch(categoriesStart());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(taxCodesStart());\n  }, [dispatch]);\n\n  const categories = useSelector(\n    (state: RootState) => state.categories.categories\n  );\n\n  const taxCodes = useSelector((state: RootState) => state.taxCodes.taxCodes);\n\n  useEffect(() => {\n    let _categorylist: any = [];\n\n    for (let i = 0; i < categories.length; i++) {\n      _categorylist.push(categories[i].categoryName);\n    }\n    setCategoryList(_categorylist);\n  }, [categories]);\n\n  useEffect(() => {\n    let _taxCodelist: any = [];\n\n    for (let i = 0; i < taxCodes.length; i++) {\n      _taxCodelist.push(`${taxCodes[i].name} || ${taxCodes[i].id}`);\n    }\n    setTaxCodes(_taxCodelist);\n  }, [taxCodes]);\n\n  const onBeforeDownload = () => {\n    let _data = [];\n\n    for (let i = 0; i < 1000; i++) {\n      _data.push({\n        \"Product Id\": \"\",\n        \"Sale Price\": \"\",\n        Price: \"\",\n        Quantity: \"\",\n        \"Listing Status\": \"\",\n      });\n    }\n\n    return _data;\n  };\n\n  return (\n    <>\n      <Grid container spacing={2} direction=\"row\">\n        <Grid item lg={6}>\n          <div className=\"request-to-sell-wrap\">\n            <section className=\"request-form-section non-active\">\n              <div className=\"container\">\n                <div className=\"request-form-card\">\n                  <Grid\n                    direction=\"column\"\n                    container\n                    alignItems=\"center\"\n                    spacing={2}\n                  >\n                    <Grid item>\n                      <Typography component=\"h6\" variant=\"h6\">\n                        DOWNLOAD TEMPLATE\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Grid\n                        container\n                        direction=\"row\"\n                        alignItems=\"center\"\n                        justifyContent={\"center\"}\n                        spacing={2}\n                      >\n                        <Grid item>\n                          <ExcelDownloaderTemplate\n                            btnName={\"Download Template\"}\n                            fileName={\"QtyPriceTemplate\"}\n                            onBeforeDownload={onBeforeDownload}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n            </section>\n          </div>\n        </Grid>\n        <Grid item lg={6}>\n          <div className=\"request-to-sell-wrap\">\n            <section className=\"request-form-section non-active\">\n              <div className=\"container\">\n                <div className=\"request-form-card\">\n                  <Grid\n                    direction=\"column\"\n                    container\n                    alignItems=\"center\"\n                    spacing={2}\n                  >\n                    <Grid item>\n                      <Typography component=\"h6\" variant=\"h6\">\n                        UPLOAD PRODUCTS EXCEL FILE\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Grid\n                        container\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        spacing={8}\n                      >\n                        <Grid item>\n                          <ExcelToJson />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n            </section>\n          </div>\n        </Grid>\n      </Grid>\n      <Grid\n        direction=\"column\"\n        container\n        alignItems=\"center\"\n        justifyContent={\"center\"}\n      >\n        <Grid item>\n          <Paper\n            sx={{\n              borderRadius: 13,\n              mx: \"2px\",\n              border: `3px solid #0068ff`,\n            }}\n            elevation={24}\n          >\n            <Box sx={{ minWidth: 1000 }} p={2}>\n              <div\n                style={{\n                  textAlign: \"center\",\n                }}\n              >\n                <div\n                  style={{\n                    display: \"inline-flex\",\n                    alignItems: \"center\",\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  <InfoIcon\n                    sx={{ color: \"red\", marginRight: \"10px\", fontSize: \"40px\" }}\n                  />\n                  <p className=\"table-heading\">Instructions</p>\n                </div>\n              </div>\n              <div className=\"container container-margin\">\n                <div className=\"auth-form-wrap-home\">\n                  <Card sx={{ minWidth: 1000 }}>\n                    <CardContent>\n                      <Typography sx={{ fontSize: 30 }} color=\"#0f5b9e\">\n                        Follow the below steps to upload your products in our\n                        product's database.\n                      </Typography>\n                      <br />\n                      <Typography sx={{ fontSize: 20 }} color=\"InfoText\">\n                        1. Under 'DOWNLOAD PRODUCT TEMPLATE' section, Select a\n                        category from the category dropdown and click on\n                        'DOWNLOAD EXCEL SHEET' button. An excel sheet will get\n                        downloaded on your system named 'ProductTemplate.xlsx'\n                      </Typography>\n                      <br />\n\n                      <Typography sx={{ fontSize: 17 }} color=\"InfoText\">\n                        2. In the downloaded excel file, you will find three\n                        sheets\n                        <br />\n                        <List>\n                          <ListItem>\n                            <ChevronRightIcon />\n                            data - Template file that contains all the columns\n                            you need to fill. Each column represents a property\n                            of the product. Eg - title, description, price,\n                            quantity etc.\n                          </ListItem>\n                          <ListItem>\n                            <ChevronRightIcon />\n                            Instructions - You can refer to this sheet in order\n                            to understand the meaning of each column that needs\n                            to filled.\n                          </ListItem>\n                          <ListItem>\n                            <ChevronRightIcon />\n                            Example - You can refer to this sheet in order to\n                            get an idea how to fill the sheet 'data'.\n                          </ListItem>\n                        </List>\n                      </Typography>\n                      <Typography sx={{ fontSize: 20 }} color=\"InfoText\">\n                        3. Fom section 'UPLOAD PRODUCTS EXCEL FILE' click on\n                        'ADD ATTACHEMENTS' and select the updated excel file.\n                      </Typography>\n                      <Typography sx={{ fontSize: 20 }} color=\"InfoText\">\n                        4. Finally your products will be updated in our system.\n                      </Typography>\n                      <br />\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}