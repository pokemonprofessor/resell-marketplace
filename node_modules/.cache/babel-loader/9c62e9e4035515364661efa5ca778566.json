{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { sellerProductsStart, sellerProductsSuccess, sellerProductsFailure } from 'redux/reducers/sellerProducts';\nimport { getprouducts } from \"redux/services/sellerProducts\";\nfunction* sellerProductsSagaWatcher() {\n  yield takeLatest([sellerProductsStart.type], sellerProductsWorker);\n}\nfunction* sellerProductsWorker(action) {\n  try {\n    switch (action.type) {\n      case sellerProductsStart.type:\n        {\n          const response = yield call(getprouducts, action.payload);\n          yield put(sellerProductsSuccess({\n            sellerProductsResponse: response.ResponseBody\n          }));\n        }\n        break;\n      default:\n        break;\n    }\n  } catch (err) {\n    console.error(`Error occuring while calling an action ${action.type}`, err);\n    if (action.type === sellerProductsStart.type) {\n      var _err$response, _err$response$data;\n      console.error(err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg);\n      yield put(sellerProductsFailure());\n    }\n  }\n}\nexport default sellerProductsSagaWatcher;","map":{"version":3,"names":["call","put","takeLatest","sellerProductsStart","sellerProductsSuccess","sellerProductsFailure","getprouducts","sellerProductsSagaWatcher","type","sellerProductsWorker","action","response","payload","sellerProductsResponse","ResponseBody","err","console","error","_err$response","_err$response$data","data","msg"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/saga/sellerProducts.tsx"],"sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n    sellerProductsStart,\n    sellerProductsSuccess,\n    sellerProductsFailure\n} from 'redux/reducers/sellerProducts';\nimport { getprouducts } from \"redux/services/sellerProducts\";\n\nfunction* sellerProductsSagaWatcher() {\n  yield takeLatest(\n    [sellerProductsStart.type],\n    sellerProductsWorker,\n  );\n}\n\nfunction* sellerProductsWorker(action: any): any {\n  try {\n    switch (action.type) {\n      case sellerProductsStart.type: {\n        const response: any = yield call(getprouducts, action.payload);\n        yield put(sellerProductsSuccess({sellerProductsResponse : response.ResponseBody}));\n      }\n        break;\n\n      default:\n        break;\n    }\n  } catch (err: any) {\n    console.error(`Error occuring while calling an action ${action.type}`, err);\n\n    if (action.type === sellerProductsStart.type) {\n      console.error(err?.response?.data?.msg);\n      yield put(sellerProductsFailure());\n    }\n  }\n}\n\nexport default sellerProductsSagaWatcher;\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,SACIC,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,QAClB,+BAA+B;AACtC,SAASC,YAAY,QAAQ,+BAA+B;AAE5D,UAAUC,yBAAyBA,CAAA,EAAG;EACpC,MAAML,UAAU,CACd,CAACC,mBAAmB,CAACK,IAAI,CAAC,EAC1BC,oBACF,CAAC;AACH;AAEA,UAAUA,oBAAoBA,CAACC,MAAW,EAAO;EAC/C,IAAI;IACF,QAAQA,MAAM,CAACF,IAAI;MACjB,KAAKL,mBAAmB,CAACK,IAAI;QAAE;UAC7B,MAAMG,QAAa,GAAG,MAAMX,IAAI,CAACM,YAAY,EAAEI,MAAM,CAACE,OAAO,CAAC;UAC9D,MAAMX,GAAG,CAACG,qBAAqB,CAAC;YAACS,sBAAsB,EAAGF,QAAQ,CAACG;UAAY,CAAC,CAAC,CAAC;QACpF;QACE;MAEF;QACE;IACJ;EACF,CAAC,CAAC,OAAOC,GAAQ,EAAE;IACjBC,OAAO,CAACC,KAAK,CAAE,0CAAyCP,MAAM,CAACF,IAAK,EAAC,EAAEO,GAAG,CAAC;IAE3E,IAAIL,MAAM,CAACF,IAAI,KAAKL,mBAAmB,CAACK,IAAI,EAAE;MAAA,IAAAU,aAAA,EAAAC,kBAAA;MAC5CH,OAAO,CAACC,KAAK,CAACF,GAAG,aAAHA,GAAG,wBAAAG,aAAA,GAAHH,GAAG,CAAEJ,QAAQ,cAAAO,aAAA,wBAAAC,kBAAA,GAAbD,aAAA,CAAeE,IAAI,cAAAD,kBAAA,uBAAnBA,kBAAA,CAAqBE,GAAG,CAAC;MACvC,MAAMpB,GAAG,CAACI,qBAAqB,CAAC,CAAC,CAAC;IACpC;EACF;AACF;AAEA,eAAeE,yBAAyB"},"metadata":{},"sourceType":"module"}