{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { taxCodesStart, taxCodesSuccess, taxCodesFailure } from \"redux/reducers/taxCodes\";\nimport { getTaxCodes } from \"redux/services/taxCodes\";\nfunction* taxCodesSagaWatcher() {\n  yield takeLatest([taxCodesStart.type], taxCodesWorker);\n}\nfunction* taxCodesWorker(action) {\n  try {\n    switch (action.type) {\n      case taxCodesStart.type:\n        {\n          const response = yield call(getTaxCodes);\n          yield put(taxCodesSuccess({\n            taxCodes: response.ResponseBody.taxCodesList\n          }));\n        }\n        break;\n      default:\n        break;\n    }\n  } catch (err) {\n    console.error(`Error occuring while calling an action ${action.type}`, err);\n    if (action.type === taxCodesStart.type) {\n      var _err$response, _err$response$data;\n      console.error(err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg);\n      yield put(taxCodesFailure());\n    }\n  }\n}\nexport default taxCodesSagaWatcher;","map":{"version":3,"names":["call","put","takeLatest","taxCodesStart","taxCodesSuccess","taxCodesFailure","getTaxCodes","taxCodesSagaWatcher","type","taxCodesWorker","action","response","taxCodes","ResponseBody","taxCodesList","err","console","error","_err$response","_err$response$data","data","msg"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/saga/taxCodes.tsx"],"sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  taxCodesStart,\n  taxCodesSuccess,\n  taxCodesFailure,\n} from \"redux/reducers/taxCodes\";\nimport { getTaxCodes } from \"redux/services/taxCodes\";\n\nfunction* taxCodesSagaWatcher() {\n  yield takeLatest([taxCodesStart.type], taxCodesWorker);\n}\n\nfunction* taxCodesWorker(action: any): any {\n  try {\n    switch (action.type) {\n      case taxCodesStart.type:\n        {\n          const response: any = yield call(getTaxCodes);\n          yield put(taxCodesSuccess({ taxCodes: response.ResponseBody.taxCodesList }));\n        }\n        break;\n\n      default:\n        break;\n    }\n  } catch (err: any) {\n    console.error(`Error occuring while calling an action ${action.type}`, err);\n\n    if (action.type === taxCodesStart.type) {\n      console.error(err?.response?.data?.msg);\n      yield put(taxCodesFailure());\n    }\n  }\n}\n\nexport default taxCodesSagaWatcher;\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,SACEC,aAAa,EACbC,eAAe,EACfC,eAAe,QACV,yBAAyB;AAChC,SAASC,WAAW,QAAQ,yBAAyB;AAErD,UAAUC,mBAAmBA,CAAA,EAAG;EAC9B,MAAML,UAAU,CAAC,CAACC,aAAa,CAACK,IAAI,CAAC,EAAEC,cAAc,CAAC;AACxD;AAEA,UAAUA,cAAcA,CAACC,MAAW,EAAO;EACzC,IAAI;IACF,QAAQA,MAAM,CAACF,IAAI;MACjB,KAAKL,aAAa,CAACK,IAAI;QACrB;UACE,MAAMG,QAAa,GAAG,MAAMX,IAAI,CAACM,WAAW,CAAC;UAC7C,MAAML,GAAG,CAACG,eAAe,CAAC;YAAEQ,QAAQ,EAAED,QAAQ,CAACE,YAAY,CAACC;UAAa,CAAC,CAAC,CAAC;QAC9E;QACA;MAEF;QACE;IACJ;EACF,CAAC,CAAC,OAAOC,GAAQ,EAAE;IACjBC,OAAO,CAACC,KAAK,CAAE,0CAAyCP,MAAM,CAACF,IAAK,EAAC,EAAEO,GAAG,CAAC;IAE3E,IAAIL,MAAM,CAACF,IAAI,KAAKL,aAAa,CAACK,IAAI,EAAE;MAAA,IAAAU,aAAA,EAAAC,kBAAA;MACtCH,OAAO,CAACC,KAAK,CAACF,GAAG,aAAHA,GAAG,wBAAAG,aAAA,GAAHH,GAAG,CAAEJ,QAAQ,cAAAO,aAAA,wBAAAC,kBAAA,GAAbD,aAAA,CAAeE,IAAI,cAAAD,kBAAA,uBAAnBA,kBAAA,CAAqBE,GAAG,CAAC;MACvC,MAAMpB,GAAG,CAACI,eAAe,CAAC,CAAC,CAAC;IAC9B;EACF;AACF;AAEA,eAAeE,mBAAmB"},"metadata":{},"sourceType":"module"}