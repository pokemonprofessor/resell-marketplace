{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { categoriesStart, categoriesSuccess, categoriesFailure } from 'redux/reducers/categories';\nimport { getCategories } from \"redux/services/categories\";\nfunction* categoriesSagaWatcher() {\n  yield takeLatest([categoriesStart.type], categoriesWorker);\n}\nfunction* categoriesWorker(action) {\n  try {\n    switch (action.type) {\n      case categoriesStart.type:\n        {\n          const response = yield call(getCategories);\n          yield put(categoriesSuccess({\n            categories: response.ResponseBody\n          }));\n        }\n        break;\n      default:\n        break;\n    }\n  } catch (err) {\n    console.error(`Error occuring while calling an action ${action.type}`, err);\n    if (action.type === categoriesStart.type) {\n      var _err$response, _err$response$data;\n      console.error(err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg);\n      yield put(categoriesFailure());\n    }\n  }\n}\nexport default categoriesSagaWatcher;","map":{"version":3,"names":["call","put","takeLatest","categoriesStart","categoriesSuccess","categoriesFailure","getCategories","categoriesSagaWatcher","type","categoriesWorker","action","response","categories","ResponseBody","err","console","error","_err$response","_err$response$data","data","msg"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/saga/categories.tsx"],"sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  categoriesStart,\n  categoriesSuccess,\n  categoriesFailure\n} from 'redux/reducers/categories';\nimport { getCategories } from \"redux/services/categories\";\n\nfunction* categoriesSagaWatcher() {\n  yield takeLatest(\n    [categoriesStart.type],\n    categoriesWorker,\n  );\n}\n\nfunction* categoriesWorker(action: any): any {\n  try {\n    switch (action.type) {\n      case categoriesStart.type: {\n        const response: any = yield call(getCategories);\n        yield put(categoriesSuccess({categories : response.ResponseBody}));\n      }\n        break;\n\n      default:\n        break;\n    }\n  } catch (err: any) {\n    console.error(`Error occuring while calling an action ${action.type}`, err);\n\n    if (action.type === categoriesStart.type) {\n      console.error(err?.response?.data?.msg);\n      yield put(categoriesFailure());\n    }\n  }\n}\n\nexport default categoriesSagaWatcher;\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,SACEC,eAAe,EACfC,iBAAiB,EACjBC,iBAAiB,QACZ,2BAA2B;AAClC,SAASC,aAAa,QAAQ,2BAA2B;AAEzD,UAAUC,qBAAqBA,CAAA,EAAG;EAChC,MAAML,UAAU,CACd,CAACC,eAAe,CAACK,IAAI,CAAC,EACtBC,gBACF,CAAC;AACH;AAEA,UAAUA,gBAAgBA,CAACC,MAAW,EAAO;EAC3C,IAAI;IACF,QAAQA,MAAM,CAACF,IAAI;MACjB,KAAKL,eAAe,CAACK,IAAI;QAAE;UACzB,MAAMG,QAAa,GAAG,MAAMX,IAAI,CAACM,aAAa,CAAC;UAC/C,MAAML,GAAG,CAACG,iBAAiB,CAAC;YAACQ,UAAU,EAAGD,QAAQ,CAACE;UAAY,CAAC,CAAC,CAAC;QACpE;QACE;MAEF;QACE;IACJ;EACF,CAAC,CAAC,OAAOC,GAAQ,EAAE;IACjBC,OAAO,CAACC,KAAK,CAAE,0CAAyCN,MAAM,CAACF,IAAK,EAAC,EAAEM,GAAG,CAAC;IAE3E,IAAIJ,MAAM,CAACF,IAAI,KAAKL,eAAe,CAACK,IAAI,EAAE;MAAA,IAAAS,aAAA,EAAAC,kBAAA;MACxCH,OAAO,CAACC,KAAK,CAACF,GAAG,aAAHA,GAAG,wBAAAG,aAAA,GAAHH,GAAG,CAAEH,QAAQ,cAAAM,aAAA,wBAAAC,kBAAA,GAAbD,aAAA,CAAeE,IAAI,cAAAD,kBAAA,uBAAnBA,kBAAA,CAAqBE,GAAG,CAAC;MACvC,MAAMnB,GAAG,CAACI,iBAAiB,CAAC,CAAC,CAAC;IAChC;EACF;AACF;AAEA,eAAeE,qBAAqB"},"metadata":{},"sourceType":"module"}