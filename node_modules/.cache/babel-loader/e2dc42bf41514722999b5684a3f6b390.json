{"ast":null,"code":"var _jsxFileName = \"/Users/pulkit/Desktop/resell-marketplace-main/src/components/Content/BulkUpload/excelDownloader.tsx\";\nimport * as XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport TemplateData from \"utils/data/templateData/data\";\nimport snack from \"components/wrapper/snack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ExcelDownloader = props => {\n  const download = () => {\n    if (!props.categoryName) {\n      snack.error(\"Please select a category\");\n      return;\n    }\n    var data = props.onBeforeDownload(props.categoryName);\n    let header = [...TemplateData.product];\n    const ws = XLSX.utils.book_new();\n    const ws2 = XLSX.utils.json_to_sheet(TemplateData.Instructions);\n    const ws3 = XLSX.utils.json_to_sheet(TemplateData.Example);\n    XLSX.utils.sheet_add_aoa(ws, [header]);\n    XLSX.utils.sheet_add_json(ws, data, {\n      origin: \"A2\",\n      skipHeader: true\n    });\n    // data sheet\n    const wb = {\n      Sheets: {\n        data: ws\n      },\n      SheetNames: [\"data\"]\n    };\n    // Instruction sheet\n    XLSX.utils.book_append_sheet(wb, ws2, \"Instructions\");\n    // Example sheet\n    XLSX.utils.book_append_sheet(wb, ws3, \"Example\");\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\",\n      cellStyles: true\n    });\n    const finalData = new Blob([excelBuffer], {\n      type: \"xlsx\"\n    });\n    FileSaver.saveAs(finalData, \"ProductTemplate.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: download,\n      children: \"DOWNLOAD EXCEL SHEET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ExcelDownloader;\nvar _c;\n$RefreshReg$(_c, \"ExcelDownloader\");","map":{"version":3,"names":["XLSX","FileSaver","TemplateData","snack","jsxDEV","_jsxDEV","Fragment","_Fragment","ExcelDownloader","props","download","categoryName","error","data","onBeforeDownload","header","product","ws","utils","book_new","ws2","json_to_sheet","Instructions","ws3","Example","sheet_add_aoa","sheet_add_json","origin","skipHeader","wb","Sheets","SheetNames","book_append_sheet","excelBuffer","write","bookType","type","cellStyles","finalData","Blob","saveAs","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/components/Content/BulkUpload/excelDownloader.tsx"],"sourcesContent":["import * as XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nimport TemplateData from \"utils/data/templateData/data\";\nimport snack from \"components/wrapper/snack\";\n\nexport const ExcelDownloader = (props: any) => {\n  const download = () => {\n    if (!props.categoryName) {\n      snack.error(\"Please select a category\");\n      return;\n    }\n    var data = props.onBeforeDownload(props.categoryName);\n    let header = [...TemplateData.product];\n    const ws = XLSX.utils.book_new();\n    const ws2 = XLSX.utils.json_to_sheet(TemplateData.Instructions);\n    const ws3 = XLSX.utils.json_to_sheet(TemplateData.Example);\n\n    XLSX.utils.sheet_add_aoa(ws, [header]);\n    XLSX.utils.sheet_add_json(ws, data, { origin: \"A2\", skipHeader: true });\n    // data sheet\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    // Instruction sheet\n    XLSX.utils.book_append_sheet(wb, ws2, \"Instructions\");\n    // Example sheet\n    XLSX.utils.book_append_sheet(wb, ws3, \"Example\");\n\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\",\n      cellStyles: true,\n    });\n    const finalData = new Blob([excelBuffer], { type: \"xlsx\" });\n    FileSaver.saveAs(finalData, \"ProductTemplate.xlsx\");\n  };\n\n  return (\n    <>\n      <button className=\"btn btn-primary\" onClick={download}>\n        DOWNLOAD EXCEL SHEET\n      </button>\n    </>\n  );\n};\n"],"mappings":";AAAA,OAAO,KAAKA,IAAI,MAAM,MAAM;AAC5B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,OAAO,MAAMC,eAAe,GAAIC,KAAU,IAAK;EAC7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACD,KAAK,CAACE,YAAY,EAAE;MACvBR,KAAK,CAACS,KAAK,CAAC,0BAA0B,CAAC;MACvC;IACF;IACA,IAAIC,IAAI,GAAGJ,KAAK,CAACK,gBAAgB,CAACL,KAAK,CAACE,YAAY,CAAC;IACrD,IAAII,MAAM,GAAG,CAAC,GAAGb,YAAY,CAACc,OAAO,CAAC;IACtC,MAAMC,EAAE,GAAGjB,IAAI,CAACkB,KAAK,CAACC,QAAQ,CAAC,CAAC;IAChC,MAAMC,GAAG,GAAGpB,IAAI,CAACkB,KAAK,CAACG,aAAa,CAACnB,YAAY,CAACoB,YAAY,CAAC;IAC/D,MAAMC,GAAG,GAAGvB,IAAI,CAACkB,KAAK,CAACG,aAAa,CAACnB,YAAY,CAACsB,OAAO,CAAC;IAE1DxB,IAAI,CAACkB,KAAK,CAACO,aAAa,CAACR,EAAE,EAAE,CAACF,MAAM,CAAC,CAAC;IACtCf,IAAI,CAACkB,KAAK,CAACQ,cAAc,CAACT,EAAE,EAAEJ,IAAI,EAAE;MAAEc,MAAM,EAAE,IAAI;MAAEC,UAAU,EAAE;IAAK,CAAC,CAAC;IACvE;IACA,MAAMC,EAAE,GAAG;MAAEC,MAAM,EAAE;QAAEjB,IAAI,EAAEI;MAAG,CAAC;MAAEc,UAAU,EAAE,CAAC,MAAM;IAAE,CAAC;IACzD;IACA/B,IAAI,CAACkB,KAAK,CAACc,iBAAiB,CAACH,EAAE,EAAET,GAAG,EAAE,cAAc,CAAC;IACrD;IACApB,IAAI,CAACkB,KAAK,CAACc,iBAAiB,CAACH,EAAE,EAAEN,GAAG,EAAE,SAAS,CAAC;IAEhD,MAAMU,WAAW,GAAGjC,IAAI,CAACkC,KAAK,CAACL,EAAE,EAAE;MACjCM,QAAQ,EAAE,MAAM;MAChBC,IAAI,EAAE,OAAO;MACbC,UAAU,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACN,WAAW,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAO,CAAC,CAAC;IAC3DnC,SAAS,CAACuC,MAAM,CAACF,SAAS,EAAE,sBAAsB,CAAC;EACrD,CAAC;EAED,oBACEjC,OAAA,CAAAE,SAAA;IAAAkC,QAAA,eACEpC,OAAA;MAAQqC,SAAS,EAAC,iBAAiB;MAACC,OAAO,EAAEjC,QAAS;MAAA+B,QAAA,EAAC;IAEvD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBACT,CAAC;AAEP,CAAC;AAACC,EAAA,GArCWxC,eAAe;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}