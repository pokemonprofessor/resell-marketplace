{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducers';\nimport saga from './saga';\nconst sagaMiddleWare = createSagaMiddleware();\nconst store = configureStore({\n  reducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    thunk: false,\n    serializableCheck: false\n  }).concat(sagaMiddleWare)\n});\nsagaMiddleWare.run(saga);\nexport default store;","map":{"version":3,"names":["configureStore","createSagaMiddleware","reducer","saga","sagaMiddleWare","store","middleware","getDefaultMiddleware","thunk","serializableCheck","concat","run"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './reducers';\nimport saga from './saga';\n\nconst sagaMiddleWare = createSagaMiddleware ();\nconst store = configureStore ({\n  reducer,\n  middleware : getDefaultMiddleware => getDefaultMiddleware({ thunk: false,  serializableCheck : false }).concat(sagaMiddleWare)\n});\nsagaMiddleWare.run (saga);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = typeof store.dispatch\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAEzB,MAAMC,cAAc,GAAGH,oBAAoB,CAAE,CAAC;AAC9C,MAAMI,KAAK,GAAGL,cAAc,CAAE;EAC5BE,OAAO;EACPI,UAAU,EAAGC,oBAAoB,IAAIA,oBAAoB,CAAC;IAAEC,KAAK,EAAE,KAAK;IAAGC,iBAAiB,EAAG;EAAM,CAAC,CAAC,CAACC,MAAM,CAACN,cAAc;AAC/H,CAAC,CAAC;AACFA,cAAc,CAACO,GAAG,CAAER,IAAI,CAAC;AAEzB,eAAeE,KAAK"},"metadata":{},"sourceType":"module"}