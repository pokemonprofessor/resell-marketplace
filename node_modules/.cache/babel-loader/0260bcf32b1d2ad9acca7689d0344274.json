{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getAccessToken } from 'utils/auth';\nconst initialState = {\n  isLoading: false,\n  loggedIn: false,\n  accessToken: getAccessToken() || null,\n  error: false,\n  message: '',\n  user: {},\n  loggedOut: true,\n  verified: false,\n  emailVerificationSigninErr: false\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    loginStart: (state, action) => ({\n      ...initialState,\n      error: false,\n      isLoading: true\n    }),\n    loginSuccess: (state, action) => {\n      if (action.payload.verified) {\n        state.verified = true;\n        state.user = action.payload.user;\n        state.isLoading = false;\n      } else {\n        state = {\n          ...state,\n          isLoading: false,\n          loggedIn: true,\n          error: false,\n          user: action.payload.user,\n          accessToken: action.payload.user.token\n        };\n      }\n    },\n    loginFail: (state, action) => ({\n      ...state,\n      isLoading: false,\n      loggedIn: false,\n      emailVerificationSigninErr: action.payload.emailVerificationSigninErr,\n      error: action.payload.error,\n      message: action.payload.msg\n    }),\n    logoutStart: state => ({\n      ...initialState,\n      error: false,\n      isLoading: true\n    }),\n    logoutSuccess: state => ({\n      ...state,\n      isLoading: false\n    }),\n    getUserStart: state => ({\n      ...state,\n      isLoading: false\n    }),\n    getUserSuccess: (state, action) => ({\n      ...state,\n      isLoading: false,\n      loggedIn: true,\n      error: false,\n      user: action.payload.user,\n      accessToken: action.payload.user.token\n    }),\n    clearUserData: state => ({\n      ...state,\n      user: {},\n      loggedIn: false,\n      loggedOut: true,\n      isLoading: false,\n      error: false,\n      accessToken: null\n    }),\n    signupStartStart: (state, action) => ({\n      ...initialState,\n      isLoading: true\n    }),\n    signupStartSuccess: (state, action) => ({\n      ...initialState,\n      isLoading: false,\n      user: action.payload.user,\n      accessToken: action.payload.user.token,\n      error: false\n    }),\n    signupStartFailure: (state, action) => ({\n      ...initialState,\n      isLoading: false,\n      error: true,\n      msg: action.payload.msg\n    }),\n    showVerifyOTPStart: state => ({\n      ...state,\n      isLoading: true,\n      showOtpScreen: true\n    }),\n    showVerifyOTPSuccess: (state, action) => ({\n      ...state,\n      isLoading: false,\n      showOtpScreen: true,\n      appVerifier: action.payload.appVerifier\n    }),\n    setLoading: (state, action) => ({\n      ...state,\n      isLoading: action.payload.loading\n    }),\n    setShowOtpScreen: (state, action) => ({\n      ...state,\n      showOtpScreen: action.payload.showOtpScreen\n    }),\n    sendOTPUsingFirebaseStart: (state, action) => ({\n      ...state,\n      isLoading: true\n    }),\n    sendOTPUsingFirebaseSuccess: (state, action) => ({\n      ...state,\n      isLoading: false,\n      appVerifier: action.payload.appVerifier\n    }),\n    sendOTPUsingFirebaseFail: (state, action) => ({\n      ...state,\n      isLoading: false,\n      error: action.payload.error,\n      msg: action.payload.message\n    }),\n    setEmailVerified: (state, action) => ({\n      ...state,\n      verified: action.payload.verified\n    }),\n    verifyEmailOTPStart: (state, action) => ({\n      ...state,\n      isLoading: true\n    }),\n    verifyEmailOTPSuccess: state => ({\n      ...state,\n      isLoading: false\n    }),\n    verifyEmailOTPFailure: (state, action) => ({\n      ...state,\n      isLoading: false,\n      error: true\n    })\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFail,\n  logoutStart,\n  logoutSuccess,\n  getUserStart,\n  getUserSuccess,\n  clearUserData,\n  signupStartStart,\n  showVerifyOTPStart,\n  showVerifyOTPSuccess,\n  signupStartSuccess,\n  signupStartFailure,\n  setLoading,\n  setShowOtpScreen,\n  sendOTPUsingFirebaseFail,\n  sendOTPUsingFirebaseStart,\n  sendOTPUsingFirebaseSuccess,\n  setEmailVerified,\n  verifyEmailOTPStart,\n  verifyEmailOTPFailure,\n  verifyEmailOTPSuccess\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","getAccessToken","initialState","isLoading","loggedIn","accessToken","error","message","user","loggedOut","verified","emailVerificationSigninErr","userSlice","name","reducers","loginStart","state","action","loginSuccess","payload","token","loginFail","msg","logoutStart","logoutSuccess","getUserStart","getUserSuccess","clearUserData","signupStartStart","signupStartSuccess","signupStartFailure","showVerifyOTPStart","showOtpScreen","showVerifyOTPSuccess","appVerifier","setLoading","loading","setShowOtpScreen","sendOTPUsingFirebaseStart","sendOTPUsingFirebaseSuccess","sendOTPUsingFirebaseFail","setEmailVerified","verifyEmailOTPStart","verifyEmailOTPSuccess","verifyEmailOTPFailure","actions","reducer"],"sources":["/Users/pulkit/Desktop/resell-marketplace-main/src/redux/reducers/user.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getAccessToken } from 'utils/auth';\n\ninterface State {\n  isLoading: boolean;\n  loggedIn: boolean;\n  accessToken?: string | null;\n  error?: boolean;\n  message?: string;\n  user?: any;\n  loggedOut?: boolean;\n  verified?: boolean;\n  showOtpScreen?: boolean;\n  appVerifier?: any;\n  emailVerificationSigninErr?: boolean;\n}\n\nconst initialState: State = {\n  isLoading: false,\n  loggedIn: false,\n  accessToken: getAccessToken() || null,\n  error: false,\n  message: '',\n  user: {},\n  loggedOut: true,\n  verified: false,\n  emailVerificationSigninErr: false,\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    loginStart: (state: State, action) => ({\n      ...initialState,\n      error: false,\n      isLoading: true\n    }),\n    loginSuccess: (state: State, action) => {\n      if (action.payload.verified) {\n        state.verified = true;\n        state.user = action.payload.user\n        state.isLoading = false;\n      } else {\n        state = {\n          ...state,\n          isLoading: false,\n          loggedIn: true,\n          error: false,\n          user: action.payload.user,\n          accessToken: action.payload.user.token\n        }\n      }\n    },\n    loginFail: (state: State, action) => ({\n      ...state,\n      isLoading: false,\n      loggedIn: false,\n      emailVerificationSigninErr: action.payload.emailVerificationSigninErr,\n      error: action.payload.error,\n      message: action.payload.msg\n    }),\n    logoutStart: (state: State) => ({\n      ...initialState,\n      error: false,\n      isLoading: true\n    }),\n    logoutSuccess: (state: State) => ({\n      ...state,\n      isLoading: false,\n    }),\n    getUserStart: (state: State) => ({\n      ...state,\n      isLoading: false\n    }),\n    getUserSuccess: (state: State, action) => ({\n      ...state,\n      isLoading: false,\n      loggedIn: true,\n      error: false,\n      user: action.payload.user,\n      accessToken: action.payload.user.token\n    }),\n    clearUserData: (state: State) => ({\n      ...state,\n      user: {},\n      loggedIn: false,\n      loggedOut: true,\n      isLoading: false,\n      error: false,\n      accessToken: null\n    }),\n    signupStartStart: (state: State, action) => ({\n      ...initialState,\n      isLoading: true\n    }),\n    signupStartSuccess: (state: State, action) => ({\n      ...initialState,\n      isLoading: false,\n      user: action.payload.user,\n      accessToken: action.payload.user.token,\n      error: false\n    }),\n    signupStartFailure: (state: State, action) => ({\n      ...initialState,\n      isLoading: false,\n      error: true,\n      msg: action.payload.msg\n    }),\n    showVerifyOTPStart: (state: State) => ({\n      ...state,\n      isLoading: true,\n      showOtpScreen: true\n    }),\n    showVerifyOTPSuccess: (state: State, action) => ({\n      ...state,\n      isLoading: false,\n      showOtpScreen: true,\n      appVerifier: action.payload.appVerifier\n    }),\n    setLoading: (state: State, action) => ({\n      ...state,\n      isLoading: action.payload.loading\n    }),\n    setShowOtpScreen: (state: State, action) => ({\n      ...state,\n      showOtpScreen: action.payload.showOtpScreen\n    }),\n    sendOTPUsingFirebaseStart: (state: State, action) => ({\n      ...state,\n      isLoading: true\n    }),\n    sendOTPUsingFirebaseSuccess: (state: State, action) => ({\n      ...state,\n      isLoading: false,\n      appVerifier: action.payload.appVerifier,\n    }),\n    sendOTPUsingFirebaseFail: (state:State, action) => ({\n      ...state,\n      isLoading: false,\n      error: action.payload.error,\n      msg: action.payload.message\n    }),\n    setEmailVerified: (state:State, action) => ({\n      ...state,\n      verified: action.payload.verified \n    }),\n    verifyEmailOTPStart: (state:State, action) => ({\n      ...state,\n      isLoading: true      \n    }),\n    verifyEmailOTPSuccess: (state:State) => ({\n      ...state,\n      isLoading: false      \n    }),\n    verifyEmailOTPFailure: (state:State, action) => ({\n      ...state,\n      isLoading: false,\n      error: true    \n    })\n  }\n});\n\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFail,\n  logoutStart,\n  logoutSuccess,\n  getUserStart,\n  getUserSuccess,\n  clearUserData,\n  signupStartStart,\n  showVerifyOTPStart,\n  showVerifyOTPSuccess,\n  signupStartSuccess,\n  signupStartFailure,\n  setLoading,\n  setShowOtpScreen,\n  sendOTPUsingFirebaseFail,\n  sendOTPUsingFirebaseStart,\n  sendOTPUsingFirebaseSuccess,\n  setEmailVerified,\n  verifyEmailOTPStart,\n  verifyEmailOTPFailure,\n  verifyEmailOTPSuccess,\n} = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}